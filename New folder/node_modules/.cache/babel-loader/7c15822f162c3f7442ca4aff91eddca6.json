{"ast":null,"code":"var _jsxFileName = \"C:\\\\development\\\\milkybae\\\\src\\\\MintButton.tsx\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport { CircularProgress } from '@material-ui/core';\nimport { GatewayStatus, useGateway } from '@civic/solana-gateway-react';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CTAButton = styled(Button)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`; // add your own styles here\n\n_c = CTAButton;\nexport const MintButton = _ref => {\n  _s();\n\n  let {\n    onMint,\n    candyMachine,\n    isMinting\n  } = _ref;\n  const {\n    requestGatewayToken,\n    gatewayStatus\n  } = useGateway();\n  const [clicked, setClicked] = useState(false);\n  useEffect(() => {\n    if (gatewayStatus === GatewayStatus.ACTIVE && clicked) {\n      onMint();\n      setClicked(false);\n    }\n  }, [gatewayStatus, clicked, setClicked, onMint]);\n\n  const getMintButtonContent = () => {\n    if (candyMachine !== null && candyMachine !== void 0 && candyMachine.state.isSoldOut) {\n      return 'SOLD OUT';\n    } else if (isMinting) {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    } else if (candyMachine !== null && candyMachine !== void 0 && candyMachine.state.isPresale) {\n      return 'PRESALE MINT';\n    }\n\n    return 'MINT';\n  };\n\n  return /*#__PURE__*/_jsxDEV(CTAButton, {\n    disabled: (candyMachine === null || candyMachine === void 0 ? void 0 : candyMachine.state.isSoldOut) || isMinting || !(candyMachine !== null && candyMachine !== void 0 && candyMachine.state.isActive),\n    onClick: async () => {\n      setClicked(true);\n\n      if (candyMachine !== null && candyMachine !== void 0 && candyMachine.state.isActive && candyMachine !== null && candyMachine !== void 0 && candyMachine.state.gatekeeper) {\n        if (gatewayStatus === GatewayStatus.ACTIVE) {\n          setClicked(true);\n        } else {\n          await requestGatewayToken();\n        }\n      } else {\n        await onMint();\n        setClicked(false);\n      }\n    },\n    variant: \"contained\",\n    children: getMintButtonContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MintButton, \"C4iCClLy0038vDkrez1VZOKsNPU=\", false, function () {\n  return [useGateway];\n});\n\n_c2 = MintButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CTAButton\");\n$RefreshReg$(_c2, \"MintButton\");","map":{"version":3,"sources":["C:/development/milkybae/src/MintButton.tsx"],"names":["styled","Button","CircularProgress","GatewayStatus","useGateway","useEffect","useState","CTAButton","MintButton","onMint","candyMachine","isMinting","requestGatewayToken","gatewayStatus","clicked","setClicked","ACTIVE","getMintButtonContent","state","isSoldOut","isPresale","isActive","gatekeeper"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,6BAA1C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,OAAO,MAAMC,SAAS,GAAGP,MAAM,CAACC,MAAD,CAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO,C,CASJ;;KATUM,S;AAWb,OAAO,MAAMC,UAAU,GAAG,QAQpB;AAAA;;AAAA,MARqB;AACzBC,IAAAA,MADyB;AAEzBC,IAAAA,YAFyB;AAGzBC,IAAAA;AAHyB,GAQrB;AACJ,QAAM;AAAEC,IAAAA,mBAAF;AAAuBC,IAAAA;AAAvB,MAAyCT,UAAU,EAAzD;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,aAAa,KAAKV,aAAa,CAACa,MAAhC,IAA0CF,OAA9C,EAAuD;AACrDL,MAAAA,MAAM;AACNM,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GALQ,EAKN,CAACF,aAAD,EAAgBC,OAAhB,EAAyBC,UAAzB,EAAqCN,MAArC,CALM,CAAT;;AAOA,QAAMQ,oBAAoB,GAAG,MAAM;AACjC,QAAIP,YAAJ,aAAIA,YAAJ,eAAIA,YAAY,CAAEQ,KAAd,CAAoBC,SAAxB,EAAmC;AACjC,aAAO,UAAP;AACD,KAFD,MAEO,IAAIR,SAAJ,EAAe;AACpB,0BAAO,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA,IAAID,YAAJ,aAAIA,YAAJ,eAAIA,YAAY,CAAEQ,KAAd,CAAoBE,SAAxB,EAAmC;AACxC,aAAO,cAAP;AACD;;AAED,WAAO,MAAP;AACD,GAVD;;AAYA,sBACE,QAAC,SAAD;AACE,IAAA,QAAQ,EACN,CAAAV,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEQ,KAAd,CAAoBC,SAApB,KACAR,SADA,IAEA,EAACD,YAAD,aAACA,YAAD,eAACA,YAAY,CAAEQ,KAAd,CAAoBG,QAArB,CAJJ;AAME,IAAA,OAAO,EAAE,YAAY;AACnBN,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAIL,YAAY,SAAZ,IAAAA,YAAY,WAAZ,IAAAA,YAAY,CAAEQ,KAAd,CAAoBG,QAApB,IAAgCX,YAAhC,aAAgCA,YAAhC,eAAgCA,YAAY,CAAEQ,KAAd,CAAoBI,UAAxD,EAAoE;AAClE,YAAIT,aAAa,KAAKV,aAAa,CAACa,MAApC,EAA4C;AAC1CD,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD,SAFD,MAEO;AACL,gBAAMH,mBAAmB,EAAzB;AACD;AACF,OAND,MAMO;AACL,cAAMH,MAAM,EAAZ;AACAM,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAlBH;AAmBE,IAAA,OAAO,EAAC,WAnBV;AAAA,cAqBGE,oBAAoB;AArBvB;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAxDM;;GAAMT,U;UASoCJ,U;;;MATpCI,U","sourcesContent":["import styled from 'styled-components';\r\nimport Button from '@material-ui/core/Button';\r\nimport { CandyMachineAccount } from './candy-machine';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { GatewayStatus, useGateway } from '@civic/solana-gateway-react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport const CTAButton = styled(Button)`\r\n  width: 100%;\r\n  height: 60px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`; // add your own styles here\r\n\r\nexport const MintButton = ({\r\n  onMint,\r\n  candyMachine,\r\n  isMinting,\r\n}: {\r\n  onMint: () => Promise<void>;\r\n  candyMachine?: CandyMachineAccount;\r\n  isMinting: boolean;\r\n}) => {\r\n  const { requestGatewayToken, gatewayStatus } = useGateway();\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (gatewayStatus === GatewayStatus.ACTIVE && clicked) {\r\n      onMint();\r\n      setClicked(false);\r\n    }\r\n  }, [gatewayStatus, clicked, setClicked, onMint]);\r\n\r\n  const getMintButtonContent = () => {\r\n    if (candyMachine?.state.isSoldOut) {\r\n      return 'SOLD OUT';\r\n    } else if (isMinting) {\r\n      return <CircularProgress />;\r\n    } else if (candyMachine?.state.isPresale) {\r\n      return 'PRESALE MINT';\r\n    }\r\n\r\n    return 'MINT';\r\n  };\r\n\r\n  return (\r\n    <CTAButton\r\n      disabled={\r\n        candyMachine?.state.isSoldOut ||\r\n        isMinting ||\r\n        !candyMachine?.state.isActive\r\n      }\r\n      onClick={async () => {\r\n        setClicked(true);\r\n        if (candyMachine?.state.isActive && candyMachine?.state.gatekeeper) {\r\n          if (gatewayStatus === GatewayStatus.ACTIVE) {\r\n            setClicked(true);\r\n          } else {\r\n            await requestGatewayToken();\r\n          }\r\n        } else {\r\n          await onMint();\r\n          setClicked(false);\r\n        }\r\n      }}\r\n      variant=\"contained\"\r\n    >\r\n      {getMintButtonContent()}\r\n    </CTAButton>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}