{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\development\\\\milkybae\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\development\\\\milkybae\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _taggedTemplateLiteral from\"C:\\\\development\\\\milkybae\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\taggedTemplateLiteral.js\";var _templateObject;import _regeneratorRuntime from\"C:\\\\development\\\\milkybae\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import styled from'styled-components';import Button from'@material-ui/core/Button';import{CircularProgress}from'@material-ui/core';import{GatewayStatus,useGateway}from'@civic/solana-gateway-react';import{useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export var CTAButton=styled(Button)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 60px;\\n  margin-top: 10px;\\n  margin-bottom: 5px;\\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\\n  color: white;\\n  font-size: 16px;\\n  font-weight: bold;\\n\"])));// add your own styles here\nexport var MintButton=function MintButton(_ref){var onMint=_ref.onMint,candyMachine=_ref.candyMachine,isMinting=_ref.isMinting;var _useGateway=useGateway(),requestGatewayToken=_useGateway.requestGatewayToken,gatewayStatus=_useGateway.gatewayStatus;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),clicked=_useState2[0],setClicked=_useState2[1];useEffect(function(){if(gatewayStatus===GatewayStatus.ACTIVE&&clicked){onMint();setClicked(false);}},[gatewayStatus,clicked,setClicked,onMint]);var getMintButtonContent=function getMintButtonContent(){if(candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.isSoldOut){return'SOLD OUT';}else if(isMinting){return/*#__PURE__*/_jsx(CircularProgress,{});}else if(candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.isPresale){return'PRESALE MINT';}return'MINT';};return/*#__PURE__*/_jsx(CTAButton,{disabled:(candyMachine===null||candyMachine===void 0?void 0:candyMachine.state.isSoldOut)||isMinting||!(candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.isActive),onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setClicked(true);if(!(candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.isActive&&candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.gatekeeper)){_context.next=10;break;}if(!(gatewayStatus===GatewayStatus.ACTIVE)){_context.next=6;break;}setClicked(true);_context.next=8;break;case 6:_context.next=8;return requestGatewayToken();case 8:_context.next=13;break;case 10:_context.next=12;return onMint();case 12:setClicked(false);case 13:case\"end\":return _context.stop();}}},_callee);})),variant:\"contained\",children:getMintButtonContent()});};","map":{"version":3,"sources":["C:/development/milkybae/src/MintButton.tsx"],"names":["styled","Button","CircularProgress","GatewayStatus","useGateway","useEffect","useState","CTAButton","MintButton","onMint","candyMachine","isMinting","requestGatewayToken","gatewayStatus","clicked","setClicked","ACTIVE","getMintButtonContent","state","isSoldOut","isPresale","isActive","gatekeeper"],"mappings":"0fAAA,MAAOA,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CAEA,OAASC,gBAAT,KAAiC,mBAAjC,CACA,OAASC,aAAT,CAAwBC,UAAxB,KAA0C,6BAA1C,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,C,2CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAGP,MAAM,CAACC,MAAD,CAAT,6QAAf,CASJ;AAEH,MAAO,IAAMO,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAQpB,IAPJC,CAAAA,MAOI,MAPJA,MAOI,CANJC,YAMI,MANJA,YAMI,CALJC,SAKI,MALJA,SAKI,CACJ,gBAA+CP,UAAU,EAAzD,CAAQQ,mBAAR,aAAQA,mBAAR,CAA6BC,aAA7B,aAA6BA,aAA7B,CACA,cAA8BP,QAAQ,CAAC,KAAD,CAAtC,wCAAOQ,OAAP,eAAgBC,UAAhB,eAEAV,SAAS,CAAC,UAAM,CACd,GAAIQ,aAAa,GAAKV,aAAa,CAACa,MAAhC,EAA0CF,OAA9C,CAAuD,CACrDL,MAAM,GACNM,UAAU,CAAC,KAAD,CAAV,CACD,CACF,CALQ,CAKN,CAACF,aAAD,CAAgBC,OAAhB,CAAyBC,UAAzB,CAAqCN,MAArC,CALM,CAAT,CAOA,GAAMQ,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACjC,GAAIP,YAAJ,SAAIA,YAAJ,WAAIA,YAAY,CAAEQ,KAAd,CAAoBC,SAAxB,CAAmC,CACjC,MAAO,UAAP,CACD,CAFD,IAEO,IAAIR,SAAJ,CAAe,CACpB,mBAAO,KAAC,gBAAD,IAAP,CACD,CAFM,IAEA,IAAID,YAAJ,SAAIA,YAAJ,WAAIA,YAAY,CAAEQ,KAAd,CAAoBE,SAAxB,CAAmC,CACxC,MAAO,cAAP,CACD,CAED,MAAO,MAAP,CACD,CAVD,CAYA,mBACE,KAAC,SAAD,EACE,QAAQ,CACN,CAAAV,YAAY,OAAZ,EAAAA,YAAY,SAAZ,QAAAA,YAAY,CAAEQ,KAAd,CAAoBC,SAApB,GACAR,SADA,EAEA,EAACD,YAAD,SAACA,YAAD,WAACA,YAAY,CAAEQ,KAAd,CAAoBG,QAArB,CAJJ,CAME,OAAO,sEAAE,mIACPN,UAAU,CAAC,IAAD,CAAV,CADO,KAEHL,YAAY,OAAZ,EAAAA,YAAY,SAAZ,EAAAA,YAAY,CAAEQ,KAAd,CAAoBG,QAApB,EAAgCX,YAAhC,SAAgCA,YAAhC,WAAgCA,YAAY,CAAEQ,KAAd,CAAoBI,UAFjD,gCAGDT,aAAa,GAAKV,aAAa,CAACa,MAH/B,0BAIHD,UAAU,CAAC,IAAD,CAAV,CAJG,mDAMGH,CAAAA,mBAAmB,EANtB,8DASCH,CAAAA,MAAM,EATP,SAULM,UAAU,CAAC,KAAD,CAAV,CAVK,uDAAF,EANT,CAmBE,OAAO,CAAC,WAnBV,UAqBGE,oBAAoB,EArBvB,EADF,CAyBD,CAxDM","sourcesContent":["import styled from 'styled-components';\r\nimport Button from '@material-ui/core/Button';\r\nimport { CandyMachineAccount } from './candy-machine';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { GatewayStatus, useGateway } from '@civic/solana-gateway-react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport const CTAButton = styled(Button)`\r\n  width: 100%;\r\n  height: 60px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`; // add your own styles here\r\n\r\nexport const MintButton = ({\r\n  onMint,\r\n  candyMachine,\r\n  isMinting,\r\n}: {\r\n  onMint: () => Promise<void>;\r\n  candyMachine?: CandyMachineAccount;\r\n  isMinting: boolean;\r\n}) => {\r\n  const { requestGatewayToken, gatewayStatus } = useGateway();\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (gatewayStatus === GatewayStatus.ACTIVE && clicked) {\r\n      onMint();\r\n      setClicked(false);\r\n    }\r\n  }, [gatewayStatus, clicked, setClicked, onMint]);\r\n\r\n  const getMintButtonContent = () => {\r\n    if (candyMachine?.state.isSoldOut) {\r\n      return 'SOLD OUT';\r\n    } else if (isMinting) {\r\n      return <CircularProgress />;\r\n    } else if (candyMachine?.state.isPresale) {\r\n      return 'PRESALE MINT';\r\n    }\r\n\r\n    return 'MINT';\r\n  };\r\n\r\n  return (\r\n    <CTAButton\r\n      disabled={\r\n        candyMachine?.state.isSoldOut ||\r\n        isMinting ||\r\n        !candyMachine?.state.isActive\r\n      }\r\n      onClick={async () => {\r\n        setClicked(true);\r\n        if (candyMachine?.state.isActive && candyMachine?.state.gatekeeper) {\r\n          if (gatewayStatus === GatewayStatus.ACTIVE) {\r\n            setClicked(true);\r\n          } else {\r\n            await requestGatewayToken();\r\n          }\r\n        } else {\r\n          await onMint();\r\n          setClicked(false);\r\n        }\r\n      }}\r\n      variant=\"contained\"\r\n    >\r\n      {getMintButtonContent()}\r\n    </CTAButton>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}